#include <directTimers.h>

/* пример генерации шим с выбранной частотой на таймере 1
  формула для рачета предела счета приведена в шпаргалке README */

/*
  Для режима FAST PWM >>> top = (Fтаймера/Fшим)-1;
  Для режима PHASECORRECT PWM >>> top = Fтаймера/(2*Fшим);
*/

// пусть частота ШИМ будет 25 кгц в режиме коррекции фазы >>> top = 8000000/25000 >>> top = 320;

void setup() {
  pinMode(9, 1); // настраиваем канал А как выход
  pinMode(10, 1); // настраиваем канал В как выход

  TIMER1_setClock(PRESCALER_1); // задаем таймеру максимальную частоту
  TIMER1_setMode(PHASECORRECT_PWM_CUSTOM); // включаем режим кастомного предела счета
  TIMER1_setTop(320); // устанавливаем предел счета 320, чтобы получить частоту 25 кгц с коррекцией фазы
  TIMER1_COMPA_mode(NORM_PWM); // настраиваем аппаратные выходы с таймера в режим ШИМ
  TIMER1_COMPB_mode(NORM_PWM);
}

void loop() {
  int dutyA = map(analogRead(A0), 0, 1023, 0, 320); // пересчитываем диапазон потенциометра в диапазон таймера 0...top >>> 0...320
  int dutyB = map(analogRead(A1), 0, 1023, 0, 320);

  TIMER1_COMPA_setValue(dutyA); // устанавливаем на выходе А заполнение потенциометром (pin 9)
  TIMER1_COMPB_setValue(dutyB); // (pin 10)
}
